// ===================================
// 提出課題 - DOM操作
// ===================================

// このファイルは提出課題用です。
// すべての課題を完成させて、このファイルを提出してください。
// curriculum.jsファイルに実装し、HTMLやCSSは変更しないでください。
// ブラウザの開発者ツールのコンソールで結果を確認できます。エラーなどは解消して提出してください。
// 各課題について質問する際には、必ず問題番号もコピーして添付してください。

// ===================================
// Step1: 要素の取得
// ===================================

// L2-S1-1: '#demo-text'の要素を取得し、コンソールに表示
// ここにコードを書いてください

// L2-S1-2: クラス名が'demo-item'の要素をすべて取得し、要素数をコンソールに表示
// ここにコードを書いてください

// ===================================
// Step2: テキストやHTMLの変更
// ===================================

// L2-S2-1: '#output'の要素のテキスト内容を"Hello, DOM!"に変更
// ここにコードを書いてください

// L2-S2-2: '#content'の要素に"<p>動的に生成されたコンテンツ</p>"をHTMLとして設定
// ここにコードを書いてください

// ===================================
// Step3: 属性の操作
// ===================================

// L2-S3-1: '#attrDemo'の要素のsrc属性を取得し、コンソールに表示
// ここにコードを書いてください

// L2-S3-2: '#attrDemo'の要素のdata-info属性を"更新されたデータ"に設定
// ここにコードを書いてください

// ===================================
// Step4: CSSクラスの操作
// ===================================

// L2-S4-1: '#styleBox'の要素の背景色を青(blue)、文字色を白(white)に変更
// ここにコードを書いてください

// L2-S4-2: '#classDemo'の要素に'highlight'クラスを切り替え(toggle)
// ここにコードを書いてください

// ===================================
// Step5: 要素の作成・追加・削除
// ===================================

// L2-S5-1: '#container'の要素に新しいp要素を作成し、"動的に追加されたテキスト"を設定して追加
// ここにコードを書いてください

// L2-S5-2: '#removeTarget'の要素が存在する場合はDOMから削除
// ここにコードを書いてください

// ===================================
// Step6: イベントリスナー
// ===================================

// L2-S6-1: '#clickButton'の要素にクリックイベントを追加し、"ボタンがクリックされました"をコンソールに表示
// ここにコードを書いてください

// L2-S6-2: '#textInput'の要素にinputイベントを追加し、入力値をコンソールに表示
// ここにコードを書いてください

// ===================================
// Step7: フォーム・入力値の取得と状態操作
// ===================================

// L2-S7-1: '#nameInput'の入力欄の値を取得し、コンソールに表示
// ここにコードを書いてください

// L2-S7-2: '#agreeCheckbox'のチェックボックスのチェック状態を取得し、コンソールに表示
// ここにコードを書いてください

// ===================================
// Step8: DOMツリーのナビゲーション
// ===================================

// L2-S8-1: '#targetElement'の要素の親要素を取得し、コンソールに表示
// ここにコードを書いてください

// L2-S8-2: '#parentContainer'の要素の子要素数を取得し、コンソールに表示
// ここにコードを書いてください

// ===================================
// Step9: 属性・データ管理（dataset）
// ===================================

// L2-S9-1: '#productCard'の要素のdata-product-id属性を取得し、コンソールに表示
// ここにコードを書いてください

// L2-S9-2: '#userProfile'の要素のdata-status属性をactiveに設定
// ここにコードを書いてください

// ===================================
// Step10: 総合演習
// ===================================

// これまでに学んだDOM操作（要素取得、テキスト変更、スタイル変更、クラス操作、イベントリスナー、フォーム操作、DOM navigation、dataset操作）を組み合わせて実装してください。

// L2-S10-1: 動的カウンターシステム
// ここにコードを書いてください

// L2-S10-2: ユーザープロフィール管理システム
// ここにコードを書いてください

// L2-S10-3: タスク管理アプリケーション
// ここにコードを書いてください
